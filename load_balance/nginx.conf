user nginx;

events {
  worker_connections 1000;
}

# # trying to lb zmq servers
# stream {
#     upstream zmq_consumers_group {
#         server zmq_consumer_1:52236;
#         server zmq_consumer_2:52236;
#         server zmq_consumer_3:52236;
#     }
#
#     server {
#         listen 52200;
#
#         error_log /dev/stdout debug;
# #         access_log /dev/stdout;
#
#         proxy_pass zmq_consumers_group;
#     }
# }

# daemon off;
# error_log /dev/stdout info;
#
# http {
#
#     upstream grpc_consumers_group {
#         server grpc_consumer_1:50051;
#         server grpc_consumer_2:50051;
#         server grpc_consumer_3:50051;
#     }
# #     log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
# #                       '$status $body_bytes_sent "$http_referer" '
# #                       '"$http_user_agent"';
#     access_log /dev/stdout;
#     error_log /dev/stdout debug;
#
#     server {
#         listen 0.0.0.0:8080 http2;
#
#         access_log logs/access.log main;
#
#         location / {
#             # Replace localhost:50051 with the address and port of your gRPC server
#             # The 'grpc://' prefix is optional; unencrypted gRPC is the default
# #             grpc_pass grpc://localhost:50051;
#             grpc_pass grpc://grpc_consumers_group;
#         }
#     }
# }

http {
  upstream grpc_server {
    ## Leave both commented for default round robin
    ## To use least connections lb
#     least_conn;
    ## To send the sme IP Hash to the same server every call
    #ip_hash;

    server grpc:50051;
    server grpc1:50051;
    server grpc2:50051;
  }

  server {
    listen 50052 http2;
    location / {
      grpc_pass grpc_server;
    }
    ## Could add additional location blocks to point to other servers with different protos
    # location /other.SomeService {
		# 	grpc_pass grpc://other_grpc_server;
		# }
  }
}